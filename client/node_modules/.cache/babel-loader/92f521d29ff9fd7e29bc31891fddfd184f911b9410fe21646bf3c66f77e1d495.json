{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Desktop/Projects/victoria_travel_web/src/pages/BlogPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport BlogCard from \"../components/BlogCard\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux\";\nimport { useLazyRefreshTokenQuery, useGetProfileMediaQuery } from \"../services/instagram.api\";\nimport { blogSlice } from \"../store/slices/blogSlice\";\nimport config from \"../assets/config.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE = 50;\nexport default function BlogPage() {\n  _s();\n  const page = useRef(1);\n  const [refreshToken] = useLazyRefreshTokenQuery();\n  const {\n    isSuccess,\n    isLoading,\n    error,\n    data: blogs\n  } = useGetProfileMediaQuery(\"\");\n  const dispatch = useAppDispatch();\n  const {\n    pagination\n  } = useAppSelector(state => state.blog);\n  const pageCount = Math.ceil(1 / ITEMS_PER_PAGE);\n  const pageChangeHandler = ({\n    selected\n  }) => {\n    console.log(selected);\n  };\n  const refreshBlogToken = async () => {\n    try {\n      const newToken = await refreshToken(\"\");\n      config.instagramToken = newToken.access_token;\n    } catch (error) {\n      console.error(\"Error refreshing token:\", error);\n    }\n  };\n  const setupTokenRefresh = expiresIn => {\n    const refreshTokenInterval = expiresIn * 1000;\n    const tokenRefreshTimer = setInterval(() => refreshBlogToken(), refreshTokenInterval);\n    return tokenRefreshTimer;\n  };\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(blogSlice.actions.fetchSuccess({\n        blogs: blogs.data,\n        pagination: blogs.paging.cursors\n      }));\n    }\n  }, [isSuccess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto max-w-[760px] pt-5\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-red-600\",\n      children: error.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this), isSuccess && blogs.data.map(blog => /*#__PURE__*/_jsxDEV(BlogCard, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 51\n    }, this)), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"next >\",\n      onPageChange: pageChangeHandler,\n      pageRangeDisplayed: 5,\n      forcePage: page.current - 1,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      containerClassName: \"flex\",\n      pageClassName: \"py-2 px-2 border mr-2\",\n      previousClassName: \"py-2 px-2 border mr-2\",\n      nextClassName: \"py-2 px-2 border mr-2\",\n      activeClassName: \"bg-gray-500 text-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(BlogPage, \"VCu+4/S7OmRLMsDKhvHAVbyeZOA=\", false, function () {\n  return [useLazyRefreshTokenQuery, useGetProfileMediaQuery, useAppDispatch, useAppSelector];\n});\n_c = BlogPage;\nvar _c;\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"names":["React","useEffect","useRef","ReactPaginate","BlogCard","useAppDispatch","useAppSelector","useLazyRefreshTokenQuery","useGetProfileMediaQuery","blogSlice","config","jsxDEV","_jsxDEV","ITEMS_PER_PAGE","BlogPage","_s","page","refreshToken","isSuccess","isLoading","error","data","blogs","dispatch","pagination","state","blog","pageCount","Math","ceil","pageChangeHandler","selected","console","log","refreshBlogToken","newToken","instagramToken","access_token","setupTokenRefresh","expiresIn","refreshTokenInterval","tokenRefreshTimer","setInterval","actions","fetchSuccess","paging","cursors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","forcePage","current","previousLabel","containerClassName","pageClassName","previousClassName","nextClassName","activeClassName","_c","$RefreshReg$"],"sources":["/home/vladislav/Desktop/Projects/victoria_travel_web/src/pages/BlogPage.tsx"],"sourcesContent":["import React, {useEffect, useRef} from \"react\"\nimport ReactPaginate from \"react-paginate\"\n\nimport {IToken} from \"../interfaces/blog.interface\"\nimport BlogCard from \"../components/BlogCard\"\nimport {useAppDispatch, useAppSelector} from \"../hooks/redux\"\nimport {useLazyRefreshTokenQuery, useGetProfileMediaQuery} from \"../services/instagram.api\"\nimport {blogSlice} from \"../store/slices/blogSlice\"\nimport config from \"../assets/config.json\"\n\nconst ITEMS_PER_PAGE: number = 50\n\nexport default function BlogPage() {\n\n    const page = useRef(1)\n    const [refreshToken] = useLazyRefreshTokenQuery()\n    const  {isSuccess, isLoading, error, data: blogs} = useGetProfileMediaQuery(\"\")\n\n    const dispatch = useAppDispatch()\n    const {pagination} = useAppSelector(state => state.blog)\n    const pageCount: number = Math.ceil(1 / ITEMS_PER_PAGE)\n\n    const pageChangeHandler = ({selected}: { selected: number }) => {\n          console.log(selected)\n    }\n\n    const refreshBlogToken = async () => {\n        try {\n            const newToken: IToken = await refreshToken(\"\")\n            config.instagramToken = newToken.access_token\n        } catch (error) {\n            console.error(\"Error refreshing token:\", error)\n        }\n    }\n\n    const setupTokenRefresh = (expiresIn: number) => {\n        const refreshTokenInterval = expiresIn * 1000\n\n        const tokenRefreshTimer = setInterval(() => refreshBlogToken(), refreshTokenInterval)\n        return tokenRefreshTimer\n    }\n\n    useEffect(() => {\n        if (isSuccess) {\n            dispatch(blogSlice.actions.fetchSuccess({blogs: blogs.data, pagination: blogs.paging.cursors}))\n        }\n    }, [isSuccess])\n\n    return (\n        <div className=\"container mx-auto max-w-[760px] pt-5\">\n            { isLoading && <p className=\"text-center text-lg\">Loading...</p> }\n            { error && <p className=\"text-center text-red-600\">{ error.data }</p> }\n\n            { isSuccess && blogs.data.map(blog => <BlogCard key={blog.id} blog={blog} />) }\n\n            <ReactPaginate\n                breakLabel=\"...\"\n                nextLabel=\"next >\"\n                onPageChange={pageChangeHandler}\n                pageRangeDisplayed={5}\n                forcePage={page.current - 1}\n                pageCount={pageCount}\n                previousLabel=\"< previous\"\n                containerClassName=\"flex\"\n                pageClassName=\"py-2 px-2 border mr-2\"\n                previousClassName=\"py-2 px-2 border mr-2\"\n                nextClassName=\"py-2 px-2 border mr-2\"\n                activeClassName=\"bg-gray-500 text-white\"\n            />\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}